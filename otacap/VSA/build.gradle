plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

mainClassName = 'iotscope.main.Main'

group 'edu.osu.sec.vsa'
version '1.0-SNAPSHOT'

def version = [
  'javasmt': '4.1.1',
  'z3': '4.12.4'
];

repositories {
    //maven { url "https://soot-build.cs.uni-paderborn.de/nexus/repository/soot-release/" }
    //maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()

    ivy {
        url "https://www.sosy-lab.org/ivy"
        patternLayout {
        artifact "/[organisation]/[module]/[classifier]-[revision].[ext]"
        // ivy "/[organisation]/[module]/ivy-[revision].xml"
        }
        metadataSources {
        artifact()
        }
    }
}

dependencies {

    // Retrieve JavaSMT with Maven and transitive dependencies via a pom.xml
    implementation "org.sosy-lab:java-smt:${version.javasmt}"

    // Kotlin version as an alternative. Both should be equal
    runtimeOnly("org.sosy-lab:javasmt-solver-z3:${version.z3}:com.microsoft.z3@jar")
    runtimeOnly("org.sosy-lab:javasmt-solver-z3:${version.z3}:libz3@so")
    runtimeOnly("org.sosy-lab:javasmt-solver-z3:${version.z3}:libz3java@so")

    implementation fileTree(dir: 'build/dependencies', include: '*.jar')


    implementation files('libs/soot-infoflow-cmd-jar-with-dependencies.jar')

    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.17.0"
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    // https://mvnrepository.com/artifact/org.javatuples/javatuples
    implementation 'org.javatuples:javatuples:1.2'


    implementation 'guru.nidi:graphviz-java:0.18.1'
    implementation 'org.graalvm.js:js:21.2.0'
    implementation 'com.github.ajalt:clikt:2.8.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'


    // packages for the forward computation
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation('com.hivemq:hivemq-mqtt-client-reactor:1.3.0')
    implementation 'org.eclipse.californium:californium-core:3.0.0'

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.json:json:20230227'
}

configurations {
  // Use a custom config that inherits all dependencies from runtimeOnly and implementation.
  // If you want to seperate your dependencies from the JavaSMT ones
  // simply use it when pulling the dependencies.
  javaSMTConfig.extendsFrom(runtimeOnly, implementation)
}

test {
    useJUnitPlatform()
}

task copyDependencies(type: Copy) {
  // Delete old dependencies as they might cause trouble
  dependsOn 'cleanDownloadedDependencies'
  from configurations.javaSMTConfig
  into 'build/dependencies'
  // Renames the dependencies
  rename '.*(lib[^-]*)-?.*.so', '$1.so'
}

task cleanDownloadedDependencies(type: Delete) {
  delete fileTree('build/dependencies')
}

// Copy the JavaSMT depdendencies before using them, to do this we declare a dependency on the copy task of ours here
compileJava.dependsOn copyDependencies

// When clean is called we want to delete our copied JavaSMT files
clean.dependsOn cleanDownloadedDependencies

// Set duplicate strategy to remove a warning
distTar.setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
distZip.setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)

jar {
    manifest {
        attributes 'Main-Class': 'iotscope.main.Main'
        attributes 'Class-Path': configurations.javaSMTConfig.files.collect { it.getName() }.join(' ')
    }
}